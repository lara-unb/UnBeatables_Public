# Choregraphe bezier export in Python.

def main(session):

    names = list()
    times = list()
    keys = list()

    names.append("LAnklePitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.34971, [3, -0.333333, 0], [3, 0.2, 0]], [-0.704064, [3, -0.2, 0.0230095], [3, 0.266667, -0.0306793]], [-0.734743, [3, -0.266667, 0.0119311], [3, 0.133333, -0.00596553]], [-0.757754, [3, -0.133333, 0], [3, 0.2, 0]], [-0.74088, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.762356, [3, -0.0666667, 0.00278857], [3, 0.146667, -0.00613486]], [-0.768491, [3, -0.146667, 0], [3, 0.253333, 0]], [-0.713267, [3, -0.253333, -0.055224], [3, 0.266667, 0.0581305]], [-0.34971, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-4.19617e-5, [3, -0.333333, 0], [3, 0.2, 0]], [0.0137641, [3, -0.2, -0.009204], [3, 0.266667, 0.012272]], [0.0643861, [3, -0.266667, -0.0129538], [3, 0.133333, 0.00647688]], [0.0720561, [3, -0.133333, 0], [3, 0.2, 0]], [0.0643861, [3, -0.2, 0], [3, 0.0666667, 0]], [0.0643861, [3, -0.0666667, 0], [3, 0.146667, 0]], [0.0643861, [3, -0.146667, 0], [3, 0.253333, 0]], [0.0137641, [3, -0.253333, 0.0104627], [3, 0.266667, -0.0110133]], [-4.19617e-5, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.997141, [3, -0.333333, 0], [3, 0.2, 0]], [-0.975665, [3, -0.2, -0.00723164], [3, 0.266667, 0.00964219]], [-0.94652, [3, -0.266667, 0], [3, 0.133333, 0]], [-1.24412, [3, -0.133333, 0], [3, 0.2, 0]], [-1.23031, [3, -0.2, 0], [3, 0.0666667, 0]], [-1.23951, [3, -0.0666667, 0], [3, 0.146667, 0]], [-1.22417, [3, -0.146667, -0.0153397], [3, 0.253333, 0.0264958]], [-0.960325, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.997141, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-1.36368, [3, -0.333333, 0], [3, 0.2, 0]], [-1.37902, [3, -0.2, 0], [3, 0.266667, 0]], [-1.37289, [3, -0.266667, 0], [3, 0.133333, 0]], [-1.37442, [3, -0.133333, 0], [3, 0.2, 0]], [-1.36982, [3, -0.2, 0], [3, 0.0666667, 0]], [-1.61679, [3, -0.0666667, 0], [3, 0.146667, 0]], [-1.60606, [3, -0.146667, -0.0107389], [3, 0.253333, 0.0185491]], [-1.36368, [3, -0.253333, 0], [3, 0.266667, 0]], [-1.36368, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.2564, [3, -0.333333, 0], [3, 0.2, 0]], [0.2544, [3, -0.2, 0], [3, 0.266667, 0]], [0.262, [3, -0.266667, 0], [3, 0.133333, 0]], [0.2592, [3, -0.133333, 0], [3, 0.2, 0]], [0.2652, [3, -0.2, 0], [3, 0.0666667, 0]], [0.2624, [3, -0.0666667, 0.000541667], [3, 0.146667, -0.00119167]], [0.26, [3, -0.146667, 0.00112445], [3, 0.253333, -0.00194222]], [0.2532, [3, -0.253333, 0], [3, 0.266667, 0]], [0.2564, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.451038, [3, -0.333333, 0], [3, 0.2, 0]], [-0.543078, [3, -0.2, 0], [3, 0.266667, 0]], [-0.532339, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.532339, [3, -0.133333, 0], [3, 0.2, 0]], [-0.533873, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.533873, [3, -0.0666667, 0], [3, 0.146667, 0]], [-0.532339, [3, -0.146667, 0], [3, 0.253333, 0]], [-0.543078, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.451038, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.0152981, [3, -0.333333, 0], [3, 0.2, 0]], [0.0122299, [3, -0.2, 0], [3, 0.266667, 0]], [0.446352, [3, -0.266667, 0], [3, 0.133333, 0]], [0.443284, [3, -0.133333, 0], [3, 0.2, 0]], [0.446352, [3, -0.2, 0], [3, 0.0666667, 0]], [0.444818, [3, -0.0666667, 0.000479421], [3, 0.146667, -0.00105473]], [0.44175, [3, -0.146667, 0.00306829], [3, 0.253333, -0.00529978]], [0.0122299, [3, -0.253333, 0], [3, 0.266667, 0]], [0.0152981, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[4.19617e-5, [3, -0.333333, 0], [3, 0.2, 0]], [0.00310993, [3, -0.2, 0], [3, 0.266667, 0]], [-0.076658, [3, -0.266667, 0.0238622], [3, 0.133333, -0.0119311]], [-0.10427, [3, -0.133333, 0.00409059], [3, 0.2, -0.00613588]], [-0.110406, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.0275701, [3, -0.0666667, 0], [3, 0.146667, 0]], [-0.0383082, [3, -0.146667, 0], [3, 0.253333, 0]], [0.00310993, [3, -0.253333, 0], [3, 0.266667, 0]], [4.19617e-5, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.70108, [3, -0.333333, 0], [3, 0.2, 0]], [1.23338, [3, -0.2, -0.0621263], [3, 0.266667, 0.0828351]], [1.31621, [3, -0.266667, -0.00920495], [3, 0.133333, 0.00460248]], [1.32082, [3, -0.133333, -0.00143164], [3, 0.2, 0.00214747]], [1.32695, [3, -0.2, -0.00498554], [3, 0.0666667, 0.00166185]], [1.34076, [3, -0.0666667, -0.00207731], [3, 0.146667, 0.00457008]], [1.34689, [3, -0.146667, 0], [3, 0.253333, 0]], [1.23184, [3, -0.253333, 0.104876], [3, 0.266667, -0.110396]], [0.70108, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[1.44814, [3, -0.333333, 0], [3, 0.2, 0]], [1.48802, [3, -0.2, 0], [3, 0.266667, 0]], [1.44507, [3, -0.266667, 0.0429525], [3, 0.133333, -0.0214763]], [0.725624, [3, -0.133333, 0], [3, 0.2, 0]], [0.7471, [3, -0.2, -0.0214763], [3, 0.0666667, 0.00715875]], [2.0234, [3, -0.0666667, 0], [3, 0.146667, 0]], [1.99271, [3, -0.146667, 0.0306828], [3, 0.253333, -0.0529976]], [1.51103, [3, -0.253333, 0.0597499], [3, 0.266667, -0.0628947]], [1.44814, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.274628, [3, -0.333333, 0], [3, 0.2, 0]], [0.245482, [3, -0.2, 0], [3, 0.266667, 0]], [0.552281, [3, -0.266667, 0], [3, 0.133333, 0]], [0.543078, [3, -0.133333, 0], [3, 0.2, 0]], [0.543078, [3, -0.2, 0], [3, 0.0666667, 0]], [0.316046, [3, -0.0666667, 0], [3, 0.146667, 0]], [0.334454, [3, -0.146667, 0], [3, 0.253333, 0]], [0.22554, [3, -0.253333, 0], [3, 0.266667, 0]], [0.274628, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.0429101, [3, -0.333333, 0], [3, 0.2, 0]], [-0.033706, [3, -0.2, 0], [3, 0.266667, 0]], [-0.0383082, [3, -0.266667, 0.00460226], [3, 0.133333, -0.00230113]], [-1.39283, [3, -0.133333, 0], [3, 0.2, 0]], [-1.39283, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.88661, [3, -0.0666667, -0.0125505], [3, 0.146667, 0.0276111]], [-0.858999, [3, -0.146667, -0.0276111], [3, 0.253333, 0.0476919]], [-0.049046, [3, -0.253333, -0.00582908], [3, 0.266667, 0.00613588]], [-0.0429101, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.349794, [3, -0.333333, 0], [3, 0.2, 0]], [-0.63205, [3, -0.2, 0], [3, 0.266667, 0]], [0.0122299, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.799256, [3, -0.133333, 0.0889723], [3, 0.2, -0.133458]], [-0.932714, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.0813439, [3, -0.0666667, 0], [3, 0.146667, 0]], [-0.437231, [3, -0.146667, 0.0673085], [3, 0.253333, -0.11626]], [-0.63205, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.349794, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-4.19617e-5, [3, -0.333333, 0], [3, 0.2, 0]], [0.032172, [3, -0.2, -0.0247631], [3, 0.266667, 0.0330175]], [0.1733, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.0567998, [3, -0.133333, 0], [3, 0.2, 0]], [0.052114, [3, -0.2, -0.0184082], [3, 0.0666667, 0.00613606]], [0.05825, [3, -0.0666667, 0], [3, 0.146667, 0]], [0.05058, [3, -0.146667, 0.00318731], [3, 0.253333, -0.00550536]], [0.032172, [3, -0.253333, 0.00822066], [3, 0.266667, -0.00865333]], [-4.19617e-5, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.992455, [3, -0.333333, 0], [3, 0.2, 0]], [0.975581, [3, -0.2, 0.00460193], [3, 0.266667, -0.00613591]], [0.960242, [3, -0.266667, 0.00647673], [3, 0.133333, -0.00323837]], [0.946436, [3, -0.133333, 0.0114538], [3, 0.2, -0.0171807]], [0.874338, [3, -0.2, 0.0207092], [3, 0.0666667, -0.00690307]], [0.863599, [3, -0.0666667, 0.00223712], [3, 0.146667, -0.00492166]], [0.852862, [3, -0.146667, 0], [3, 0.253333, 0]], [0.958708, [3, -0.253333, -0.022669], [3, 0.266667, 0.0238621]], [0.992455, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[1.3561, [3, -0.333333, 0], [3, 0.2, 0]], [1.31928, [3, -0.2, 0], [3, 0.266667, 0]], [1.32695, [3, -0.266667, 0], [3, 0.133333, 0]], [1.31928, [3, -0.133333, 0], [3, 0.2, 0]], [1.51717, [3, -0.2, 0], [3, 0.0666667, 0]], [1.47575, [3, -0.0666667, 0.00846885], [3, 0.146667, -0.0186315]], [1.43587, [3, -0.146667, 0.0221236], [3, 0.253333, -0.0382136]], [1.29474, [3, -0.253333, 0], [3, 0.266667, 0]], [1.3561, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.2588, [3, -0.333333, 0], [3, 0.2, 0]], [0.2528, [3, -0.2, 0], [3, 0.266667, 0]], [0.2528, [3, -0.266667, 0], [3, 0.133333, 0]], [0.2588, [3, -0.133333, -0.00128], [3, 0.2, 0.00192]], [0.2624, [3, -0.2, 0], [3, 0.0666667, 0]], [0.2552, [3, -0.0666667, 0], [3, 0.146667, 0]], [0.2584, [3, -0.146667, 0], [3, 0.253333, 0]], [0.2484, [3, -0.253333, 0], [3, 0.266667, 0]], [0.2588, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.449421, [3, -0.333333, 0], [3, 0.2, 0]], [-0.553732, [3, -0.2, 0], [3, 0.266667, 0]], [0.115092, [3, -0.266667, 0], [3, 0.133333, 0]], [-0.335904, [3, -0.133333, 0], [3, 0.2, 0]], [-0.0275701, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.67952, [3, -0.0666667, 0], [3, 0.146667, 0]], [-0.271475, [3, -0.146667, 0], [3, 0.253333, 0]], [-0.555266, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.449421, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-4.19617e-5, [3, -0.333333, 0], [3, 0.2, 0]], [0.00609397, [3, -0.2, -0.00613594], [3, 0.266667, 0.00818125]], [0.355846, [3, -0.266667, 0], [3, 0.133333, 0]], [0.322099, [3, -0.133333, 0.0132948], [3, 0.2, -0.0199421]], [0.256136, [3, -0.2, 0], [3, 0.0666667, 0]], [0.352778, [3, -0.0666667, -0.00069734], [3, 0.146667, 0.00153415]], [0.354312, [3, -0.146667, 0], [3, 0.253333, 0]], [0.00762796, [3, -0.253333, 0.00728643], [3, 0.266667, -0.00766992]], [-4.19617e-5, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[4.19617e-5, [3, -0.333333, 0], [3, 0.2, 0]], [0.00310993, [3, -0.2, 0], [3, 0.266667, 0]], [-0.076658, [3, -0.266667, 0.0238622], [3, 0.133333, -0.0119311]], [-0.10427, [3, -0.133333, 0.00409059], [3, 0.2, -0.00613588]], [-0.110406, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.0275701, [3, -0.0666667, 0], [3, 0.146667, 0]], [-0.0383082, [3, -0.146667, 0], [3, 0.253333, 0]], [0.00310993, [3, -0.253333, 0], [3, 0.266667, 0]], [4.19617e-5, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[0.700996, [3, -0.333333, 0], [3, 0.2, 0]], [1.1704, [3, -0.2, 0], [3, 0.266667, 0]], [-0.0261199, [3, -0.266667, 0], [3, 0.133333, 0]], [1.17193, [3, -0.133333, 0], [3, 0.2, 0]], [1.1658, [3, -0.2, 0.00613646], [3, 0.0666667, -0.00204549]], [0.816046, [3, -0.0666667, 0.00278936], [3, 0.146667, -0.00613659]], [0.80991, [3, -0.146667, 0], [3, 0.253333, 0]], [1.1704, [3, -0.253333, 0], [3, 0.266667, 0]], [0.700996, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[1.44499, [3, -0.333333, 0], [3, 0.2, 0]], [1.45879, [3, -0.2, -0.00525942], [3, 0.266667, 0.00701256]], [1.4818, [3, -0.266667, -0.00818132], [3, 0.133333, 0.00409066]], [1.49561, [3, -0.133333, 0], [3, 0.2, 0]], [1.47106, [3, -0.2, 0], [3, 0.0666667, 0]], [1.49101, [3, -0.0666667, -0.00303598], [3, 0.146667, 0.00667915]], [1.50021, [3, -0.146667, 0], [3, 0.253333, 0]], [1.4818, [3, -0.253333, 0.008968], [3, 0.266667, -0.00944]], [1.44499, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.266875, [3, -0.333333, 0], [3, 0.2, 0]], [-0.240796, [3, -0.2, -0.00745106], [3, 0.266667, 0.00993475]], [-0.214717, [3, -0.266667, -0.01534], [3, 0.133333, 0.00767001]], [-0.171766, [3, -0.133333, 0], [3, 0.2, 0]], [-0.455555, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.377323, [3, -0.0666667, -0.0140615], [3, 0.146667, 0.0309354]], [-0.320565, [3, -0.146667, -0.019874], [3, 0.253333, 0.0343278]], [-0.214717, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.266875, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.96, 1.56, 2.36, 2.76, 3.36, 3.56, 4, 4.76, 5.56])
    keys.append([[-0.0122299, [3, -0.333333, 0], [3, 0.2, 0]], [0.00310993, [3, -0.2, 0], [3, 0.266667, 0]], [0.00157595, [3, -0.266667, 0], [3, 0.133333, 0]], [0.0138481, [3, -0.133333, 0], [3, 0.2, 0]], [0.00771189, [3, -0.2, 0.00306803], [3, 0.0666667, -0.00102268]], [0.00157595, [3, -0.0666667, 0.000697266], [3, 0.146667, -0.00153399]], [4.19617e-5, [3, -0.146667, 0.000374974], [3, 0.253333, -0.000647683]], [-0.00149202, [3, -0.253333, 0.00153399], [3, 0.266667, -0.00161472]], [-0.0122299, [3, -0.266667, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = session.service("ALMotion")
        #   motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
