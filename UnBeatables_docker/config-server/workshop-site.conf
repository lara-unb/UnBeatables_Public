##
# Arquivo de configuração do NGINX para acesso às imagens Docker
##

# Default server configuration
#

resolver 127.0.0.11 valid=30s;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

log_format default_server '$remote_addr - $remote_user [$time_local]-($proxy_host)-'
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent"';

server {
	access_log /var/log/nginx/access_default.log default_server;
	error_log /var/log/nginx/error_default.log debug;

	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	server_name _;
	index index.html index.htm vnc_lite.html vnc_html;

	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';


	root /var/www/noVNC;
	sendfile off;

	location = / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location ~* "^/(?<backend_host>unb[[:digit:]]{9})/(?<htmlPage>[[:alpha:]].*\.html)?(?<partialURI>\?.*)?$" {
		if ($arg_path = '') {
			rewrite "^/unb[[:digit:]]{9}/.*$" $scheme://$host/vnc_lite.html?$partialURI&path=$backend_host/websockify last;
		}
	}

	location ~* "^/(?<backend_host>unb[[:digit:]]{9})/websockify" {
		gzip off;
		proxy_buffering off;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_read_timeout 5m;

		proxy_pass $scheme://$backend_host:6901/websockify;
	}
}
